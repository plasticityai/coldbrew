--- build/3.5.2/Python-3.5.2/Python/ceval.c.orig	2016-06-25 14:38:38.000000000 -0700
+++ build/3.5.2/Python-3.5.2/Python/ceval.c	2019-02-01 14:07:27.000000000 -0800
@@ -17,6 +17,7 @@
 #include "opcode.h"
 #include "setobject.h"
 #include "structmember.h"
+#include <emscripten.h>
 
 #include <ctype.h>
 
@@ -785,6 +786,12 @@
 
 /* Interpreter main loop */
 
+extern int _coldbrew_no_yield;
+extern int _coldbrew_async_yield_ops;
+void _coldbrew_yield_to_javascript(void);
+int _coldbrew_yield_to_javascript_ops = 0;
+
+
 PyObject *
 PyEval_EvalFrame(PyFrameObject *f) {
     /* This is for backward compatibility with extension modules that
@@ -1219,6 +1226,12 @@
 #endif
 
     for (;;) {
+
+      /* Yield back to JavaScript every N Python bytecode instructions */
+      if (!_coldbrew_no_yield && ++_coldbrew_yield_to_javascript_ops % _coldbrew_async_yield_ops == 0) {
+        _coldbrew_yield_to_javascript();
+      }
+
 #ifdef WITH_TSC
         if (inst1 == 0) {
             /* Almost surely, the opcode executed a break
